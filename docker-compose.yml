
services:
  postgres:
    image: postgres:15
    container_name: expertlink-postgres
    environment:
      POSTGRES_DB: expertlink
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - expertlink-network

  redis:
    image: redis:7-alpine
    container_name: expertlink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - expertlink-network
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: expertlink-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: expertlink
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
      - "15674:15674" # STOMP WebSocket port
      - "61613:61613" # STOMP TCP port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - expertlink-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  expertlink-network:
    driver: bridge